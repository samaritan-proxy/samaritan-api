// Copyright 2019 Samaritan Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package service;

import "gogoproto/gogo.proto";
import "validate/validate.proto";

import "common/address.proto";


option (gogoproto.enum_stringer_all) = false;
option (gogoproto.goproto_enum_stringer_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.gostring_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

// Service represents a service.
message Service {
  // Name of service.
  string name = 1 [ (validate.rules).string.min_bytes = 1 ];
}

// Endpoint represents an endpoint of service.
message Endpoint {
  // Address of endpoint, must be set.
  common.Address address = 1 [ (validate.rules).message.required = true ];

  enum State {
    // healthy
    UP = 0;
    // unhealthy
    DOWN = 1;
    // unknown
    UNKNOWN = 2;
  }
  // Healthy state of endpoint.
  // When state is DOWN, this host will not be selected for load balancing.
  State state = 2;

  enum Type {
    // main
    MAIN = 0;
    // backup
    BACKUP = 1;
  }
  // Type of endpoints.
  // When all hosts whose type is main are in the DOWN state, 
  // the host whose type is backup will be selected.
  Type type = 3;
}

